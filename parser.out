Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> S
Rule 1     S -> SELECT_ FROM_ JOIN_ WHERE_ GROUP_BY ORDER_BY
Rule 2     SELECT_ -> SELECT CAMPOS
Rule 3     CAMPOS -> CAMPO COMA CAMPOS
Rule 4     CAMPOS -> CAMPO
Rule 5     CAMPO -> CADENA PUNTO CADENA AS COMILLA CADENA COMILLA
Rule 6     CAMPO -> CADENA PUNTO CADENA
Rule 7     CAMPO -> FUNC_RESUMEN AS COMILLA CADENA COMILLA
Rule 8     FUNC_RESUMEN -> MIN PAR_IZQ CADENA PUNTO CADENA PAR_DER
Rule 9     FUNC_RESUMEN -> MAX PAR_IZQ CADENA PUNTO CADENA PAR_DER
Rule 10    FUNC_RESUMEN -> COUNT PAR_IZQ CADENA PUNTO CADENA PAR_DER
Rule 11    FUNC_RESUMEN -> COUNT PAR_IZQ DISTINCT CADENA PUNTO CADENA PAR_DER
Rule 12    FROM_ -> FROM CADENA CADENA
Rule 13    FROM_ -> FROM CADENA AS CADENA
Rule 14    FROM_ -> FROM CADENA
Rule 15    ALIAS_T -> AS CADENA
Rule 16    ALIAS_T -> CADENA
Rule 17    JOIN_ -> JOIN_INNER_LEFT JOIN_
Rule 18    JOIN_ -> <empty>
Rule 19    JOIN_INNER_LEFT -> INNER JOIN CADENA ALIAS_T ON COND_W
Rule 20    JOIN_INNER_LEFT -> LEFT JOIN CADENA ALIAS_T ON COND_W
Rule 21    WHERE_ -> WHERE COND_W
Rule 22    WHERE_ -> <empty>
Rule 23    COND_W -> CONDICION
Rule 24    COND_W -> CADENA PUNTO CADENA SUBCONSULTA
Rule 25    COND_W -> COND_W AND COND_W
Rule 26    COND_W -> COND_W OR COND_W
Rule 27    COND_W -> PAR_IZQ COND_W OR COND_W PAR_DER
Rule 28    SUBCONSULTA -> IN PAR_IZQ S PAR_DER
Rule 29    SUBCONSULTA -> NOT IN PAR_IZQ S PAR_DER
Rule 30    VALOR -> NUMERO
Rule 31    VALOR -> COMILLA CADENA COMILLA
Rule 32    CONDICION -> CADENA PUNTO CADENA SIGNO VALOR
Rule 33    CONDICION -> CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA
Rule 34    CONDICION -> CADENA PUNTO CADENA NULLEABLE
Rule 35    NULLEABLE -> IS NOT NULL
Rule 36    NULLEABLE -> IS NULL
Rule 37    SIGNO -> IGUAL
Rule 38    SIGNO -> MAYOR
Rule 39    SIGNO -> MENOR
Rule 40    SIGNO -> MAYOR_IGUAL
Rule 41    SIGNO -> MENOR_IGUAL
Rule 42    SIGNO -> DESIGUAL
Rule 43    GROUP_BY -> GROUP BY CAMPOS_G HAVING_
Rule 44    GROUP_BY -> <empty>
Rule 45    CAMPOS_G -> CADENA PUNTO CADENA COMA CAMPOS_G
Rule 46    CAMPOS_G -> CADENA PUNTO CADENA
Rule 47    HAVING_ -> HAVING FUNC_RESUMEN SIGNO VALOR
Rule 48    HAVING_ -> <empty>
Rule 49    ORDER_BY -> ORDER BY CAMPOS_O
Rule 50    ORDER_BY -> <empty>
Rule 51    CAMPOS_O -> CADENA PUNTO CADENA ORDEN COMA CAMPOS_O
Rule 52    CAMPOS_O -> CADENA PUNTO CADENA ORDEN
Rule 53    ORDEN -> ASC
Rule 54    ORDEN -> DESC
Rule 55    ORDEN -> <empty>

Terminals, with rules where they appear

AND                  : 25
AS                   : 5 7 13 15
ASC                  : 53
BY                   : 43 49
CADENA               : 5 5 5 6 6 7 8 8 9 9 10 10 11 11 12 12 13 13 14 15 16 19 20 24 24 31 32 32 33 33 33 33 34 34 45 45 46 46 51 51 52 52
COMA                 : 3 45 51
COMILLA              : 5 5 7 7 31 31
COUNT                : 10 11
DESC                 : 54
DESIGUAL             : 42
DISTINCT             : 11
FROM                 : 12 13 14
GROUP                : 43
HAVING               : 47
IGUAL                : 37
IN                   : 28 29
INNER                : 19
IS                   : 35 36
JOIN                 : 19 20
LEFT                 : 20
MAX                  : 9
MAYOR                : 38
MAYOR_IGUAL          : 40
MENOR                : 39
MENOR_IGUAL          : 41
MIN                  : 8
NOT                  : 29 35
NULL                 : 35 36
NUMERO               : 30
ON                   : 19 20
OR                   : 26 27
ORDER                : 49
PAR_DER              : 8 9 10 11 27 28 29
PAR_IZQ              : 8 9 10 11 27 28 29
PUNTO                : 5 6 8 9 10 11 24 32 33 33 34 45 46 51 52
SELECT               : 2
WHERE                : 21
error                : 

Nonterminals, with rules where they appear

ALIAS_T              : 19 20
CAMPO                : 3 4
CAMPOS               : 2 3
CAMPOS_G             : 43 45
CAMPOS_O             : 49 51
CONDICION            : 23
COND_W               : 19 20 21 25 25 26 26 27 27
FROM_                : 1
FUNC_RESUMEN         : 7 47
GROUP_BY             : 1
HAVING_              : 43
JOIN_                : 1 17
JOIN_INNER_LEFT      : 17
NULLEABLE            : 34
ORDEN                : 51 52
ORDER_BY             : 1
S                    : 28 29 0
SELECT_              : 1
SIGNO                : 32 33 47
SUBCONSULTA          : 24
VALOR                : 32 47
WHERE_               : 1

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . SELECT_ FROM_ JOIN_ WHERE_ GROUP_BY ORDER_BY
    (2) SELECT_ -> . SELECT CAMPOS

    SELECT          shift and go to state 3

    S                              shift and go to state 1
    SELECT_                        shift and go to state 2

state 1

    (0) S' -> S .



state 2

    (1) S -> SELECT_ . FROM_ JOIN_ WHERE_ GROUP_BY ORDER_BY
    (12) FROM_ -> . FROM CADENA CADENA
    (13) FROM_ -> . FROM CADENA AS CADENA
    (14) FROM_ -> . FROM CADENA

    FROM            shift and go to state 5

    FROM_                          shift and go to state 4

state 3

    (2) SELECT_ -> SELECT . CAMPOS
    (3) CAMPOS -> . CAMPO COMA CAMPOS
    (4) CAMPOS -> . CAMPO
    (5) CAMPO -> . CADENA PUNTO CADENA AS COMILLA CADENA COMILLA
    (6) CAMPO -> . CADENA PUNTO CADENA
    (7) CAMPO -> . FUNC_RESUMEN AS COMILLA CADENA COMILLA
    (8) FUNC_RESUMEN -> . MIN PAR_IZQ CADENA PUNTO CADENA PAR_DER
    (9) FUNC_RESUMEN -> . MAX PAR_IZQ CADENA PUNTO CADENA PAR_DER
    (10) FUNC_RESUMEN -> . COUNT PAR_IZQ CADENA PUNTO CADENA PAR_DER
    (11) FUNC_RESUMEN -> . COUNT PAR_IZQ DISTINCT CADENA PUNTO CADENA PAR_DER

    CADENA          shift and go to state 8
    MIN             shift and go to state 10
    MAX             shift and go to state 11
    COUNT           shift and go to state 12

    CAMPOS                         shift and go to state 6
    CAMPO                          shift and go to state 7
    FUNC_RESUMEN                   shift and go to state 9

state 4

    (1) S -> SELECT_ FROM_ . JOIN_ WHERE_ GROUP_BY ORDER_BY
    (17) JOIN_ -> . JOIN_INNER_LEFT JOIN_
    (18) JOIN_ -> .
    (19) JOIN_INNER_LEFT -> . INNER JOIN CADENA ALIAS_T ON COND_W
    (20) JOIN_INNER_LEFT -> . LEFT JOIN CADENA ALIAS_T ON COND_W

    WHERE           reduce using rule 18 (JOIN_ -> .)
    GROUP           reduce using rule 18 (JOIN_ -> .)
    ORDER           reduce using rule 18 (JOIN_ -> .)
    $end            reduce using rule 18 (JOIN_ -> .)
    PAR_DER         reduce using rule 18 (JOIN_ -> .)
    INNER           shift and go to state 15
    LEFT            shift and go to state 16

    JOIN_                          shift and go to state 13
    JOIN_INNER_LEFT                shift and go to state 14

state 5

    (12) FROM_ -> FROM . CADENA CADENA
    (13) FROM_ -> FROM . CADENA AS CADENA
    (14) FROM_ -> FROM . CADENA

    CADENA          shift and go to state 17


state 6

    (2) SELECT_ -> SELECT CAMPOS .

    FROM            reduce using rule 2 (SELECT_ -> SELECT CAMPOS .)


state 7

    (3) CAMPOS -> CAMPO . COMA CAMPOS
    (4) CAMPOS -> CAMPO .

    COMA            shift and go to state 18
    FROM            reduce using rule 4 (CAMPOS -> CAMPO .)


state 8

    (5) CAMPO -> CADENA . PUNTO CADENA AS COMILLA CADENA COMILLA
    (6) CAMPO -> CADENA . PUNTO CADENA

    PUNTO           shift and go to state 19


state 9

    (7) CAMPO -> FUNC_RESUMEN . AS COMILLA CADENA COMILLA

    AS              shift and go to state 20


state 10

    (8) FUNC_RESUMEN -> MIN . PAR_IZQ CADENA PUNTO CADENA PAR_DER

    PAR_IZQ         shift and go to state 21


state 11

    (9) FUNC_RESUMEN -> MAX . PAR_IZQ CADENA PUNTO CADENA PAR_DER

    PAR_IZQ         shift and go to state 22


state 12

    (10) FUNC_RESUMEN -> COUNT . PAR_IZQ CADENA PUNTO CADENA PAR_DER
    (11) FUNC_RESUMEN -> COUNT . PAR_IZQ DISTINCT CADENA PUNTO CADENA PAR_DER

    PAR_IZQ         shift and go to state 23


state 13

    (1) S -> SELECT_ FROM_ JOIN_ . WHERE_ GROUP_BY ORDER_BY
    (21) WHERE_ -> . WHERE COND_W
    (22) WHERE_ -> .

    WHERE           shift and go to state 25
    GROUP           reduce using rule 22 (WHERE_ -> .)
    ORDER           reduce using rule 22 (WHERE_ -> .)
    $end            reduce using rule 22 (WHERE_ -> .)
    PAR_DER         reduce using rule 22 (WHERE_ -> .)

    WHERE_                         shift and go to state 24

state 14

    (17) JOIN_ -> JOIN_INNER_LEFT . JOIN_
    (17) JOIN_ -> . JOIN_INNER_LEFT JOIN_
    (18) JOIN_ -> .
    (19) JOIN_INNER_LEFT -> . INNER JOIN CADENA ALIAS_T ON COND_W
    (20) JOIN_INNER_LEFT -> . LEFT JOIN CADENA ALIAS_T ON COND_W

    WHERE           reduce using rule 18 (JOIN_ -> .)
    GROUP           reduce using rule 18 (JOIN_ -> .)
    ORDER           reduce using rule 18 (JOIN_ -> .)
    $end            reduce using rule 18 (JOIN_ -> .)
    PAR_DER         reduce using rule 18 (JOIN_ -> .)
    INNER           shift and go to state 15
    LEFT            shift and go to state 16

    JOIN_INNER_LEFT                shift and go to state 14
    JOIN_                          shift and go to state 26

state 15

    (19) JOIN_INNER_LEFT -> INNER . JOIN CADENA ALIAS_T ON COND_W

    JOIN            shift and go to state 27


state 16

    (20) JOIN_INNER_LEFT -> LEFT . JOIN CADENA ALIAS_T ON COND_W

    JOIN            shift and go to state 28


state 17

    (12) FROM_ -> FROM CADENA . CADENA
    (13) FROM_ -> FROM CADENA . AS CADENA
    (14) FROM_ -> FROM CADENA .

    CADENA          shift and go to state 29
    AS              shift and go to state 30
    INNER           reduce using rule 14 (FROM_ -> FROM CADENA .)
    LEFT            reduce using rule 14 (FROM_ -> FROM CADENA .)
    WHERE           reduce using rule 14 (FROM_ -> FROM CADENA .)
    GROUP           reduce using rule 14 (FROM_ -> FROM CADENA .)
    ORDER           reduce using rule 14 (FROM_ -> FROM CADENA .)
    $end            reduce using rule 14 (FROM_ -> FROM CADENA .)
    PAR_DER         reduce using rule 14 (FROM_ -> FROM CADENA .)


state 18

    (3) CAMPOS -> CAMPO COMA . CAMPOS
    (3) CAMPOS -> . CAMPO COMA CAMPOS
    (4) CAMPOS -> . CAMPO
    (5) CAMPO -> . CADENA PUNTO CADENA AS COMILLA CADENA COMILLA
    (6) CAMPO -> . CADENA PUNTO CADENA
    (7) CAMPO -> . FUNC_RESUMEN AS COMILLA CADENA COMILLA
    (8) FUNC_RESUMEN -> . MIN PAR_IZQ CADENA PUNTO CADENA PAR_DER
    (9) FUNC_RESUMEN -> . MAX PAR_IZQ CADENA PUNTO CADENA PAR_DER
    (10) FUNC_RESUMEN -> . COUNT PAR_IZQ CADENA PUNTO CADENA PAR_DER
    (11) FUNC_RESUMEN -> . COUNT PAR_IZQ DISTINCT CADENA PUNTO CADENA PAR_DER

    CADENA          shift and go to state 8
    MIN             shift and go to state 10
    MAX             shift and go to state 11
    COUNT           shift and go to state 12

    CAMPO                          shift and go to state 7
    CAMPOS                         shift and go to state 31
    FUNC_RESUMEN                   shift and go to state 9

state 19

    (5) CAMPO -> CADENA PUNTO . CADENA AS COMILLA CADENA COMILLA
    (6) CAMPO -> CADENA PUNTO . CADENA

    CADENA          shift and go to state 32


state 20

    (7) CAMPO -> FUNC_RESUMEN AS . COMILLA CADENA COMILLA

    COMILLA         shift and go to state 33


state 21

    (8) FUNC_RESUMEN -> MIN PAR_IZQ . CADENA PUNTO CADENA PAR_DER

    CADENA          shift and go to state 34


state 22

    (9) FUNC_RESUMEN -> MAX PAR_IZQ . CADENA PUNTO CADENA PAR_DER

    CADENA          shift and go to state 35


state 23

    (10) FUNC_RESUMEN -> COUNT PAR_IZQ . CADENA PUNTO CADENA PAR_DER
    (11) FUNC_RESUMEN -> COUNT PAR_IZQ . DISTINCT CADENA PUNTO CADENA PAR_DER

    CADENA          shift and go to state 36
    DISTINCT        shift and go to state 37


state 24

    (1) S -> SELECT_ FROM_ JOIN_ WHERE_ . GROUP_BY ORDER_BY
    (43) GROUP_BY -> . GROUP BY CAMPOS_G HAVING_
    (44) GROUP_BY -> .

    GROUP           shift and go to state 39
    ORDER           reduce using rule 44 (GROUP_BY -> .)
    $end            reduce using rule 44 (GROUP_BY -> .)
    PAR_DER         reduce using rule 44 (GROUP_BY -> .)

    GROUP_BY                       shift and go to state 38

state 25

    (21) WHERE_ -> WHERE . COND_W
    (23) COND_W -> . CONDICION
    (24) COND_W -> . CADENA PUNTO CADENA SUBCONSULTA
    (25) COND_W -> . COND_W AND COND_W
    (26) COND_W -> . COND_W OR COND_W
    (27) COND_W -> . PAR_IZQ COND_W OR COND_W PAR_DER
    (32) CONDICION -> . CADENA PUNTO CADENA SIGNO VALOR
    (33) CONDICION -> . CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA
    (34) CONDICION -> . CADENA PUNTO CADENA NULLEABLE

    CADENA          shift and go to state 42
    PAR_IZQ         shift and go to state 43

    COND_W                         shift and go to state 40
    CONDICION                      shift and go to state 41

state 26

    (17) JOIN_ -> JOIN_INNER_LEFT JOIN_ .

    WHERE           reduce using rule 17 (JOIN_ -> JOIN_INNER_LEFT JOIN_ .)
    GROUP           reduce using rule 17 (JOIN_ -> JOIN_INNER_LEFT JOIN_ .)
    ORDER           reduce using rule 17 (JOIN_ -> JOIN_INNER_LEFT JOIN_ .)
    $end            reduce using rule 17 (JOIN_ -> JOIN_INNER_LEFT JOIN_ .)
    PAR_DER         reduce using rule 17 (JOIN_ -> JOIN_INNER_LEFT JOIN_ .)


state 27

    (19) JOIN_INNER_LEFT -> INNER JOIN . CADENA ALIAS_T ON COND_W

    CADENA          shift and go to state 44


state 28

    (20) JOIN_INNER_LEFT -> LEFT JOIN . CADENA ALIAS_T ON COND_W

    CADENA          shift and go to state 45


state 29

    (12) FROM_ -> FROM CADENA CADENA .

    INNER           reduce using rule 12 (FROM_ -> FROM CADENA CADENA .)
    LEFT            reduce using rule 12 (FROM_ -> FROM CADENA CADENA .)
    WHERE           reduce using rule 12 (FROM_ -> FROM CADENA CADENA .)
    GROUP           reduce using rule 12 (FROM_ -> FROM CADENA CADENA .)
    ORDER           reduce using rule 12 (FROM_ -> FROM CADENA CADENA .)
    $end            reduce using rule 12 (FROM_ -> FROM CADENA CADENA .)
    PAR_DER         reduce using rule 12 (FROM_ -> FROM CADENA CADENA .)


state 30

    (13) FROM_ -> FROM CADENA AS . CADENA

    CADENA          shift and go to state 46


state 31

    (3) CAMPOS -> CAMPO COMA CAMPOS .

    FROM            reduce using rule 3 (CAMPOS -> CAMPO COMA CAMPOS .)


state 32

    (5) CAMPO -> CADENA PUNTO CADENA . AS COMILLA CADENA COMILLA
    (6) CAMPO -> CADENA PUNTO CADENA .

    AS              shift and go to state 47
    COMA            reduce using rule 6 (CAMPO -> CADENA PUNTO CADENA .)
    FROM            reduce using rule 6 (CAMPO -> CADENA PUNTO CADENA .)


state 33

    (7) CAMPO -> FUNC_RESUMEN AS COMILLA . CADENA COMILLA

    CADENA          shift and go to state 48


state 34

    (8) FUNC_RESUMEN -> MIN PAR_IZQ CADENA . PUNTO CADENA PAR_DER

    PUNTO           shift and go to state 49


state 35

    (9) FUNC_RESUMEN -> MAX PAR_IZQ CADENA . PUNTO CADENA PAR_DER

    PUNTO           shift and go to state 50


state 36

    (10) FUNC_RESUMEN -> COUNT PAR_IZQ CADENA . PUNTO CADENA PAR_DER

    PUNTO           shift and go to state 51


state 37

    (11) FUNC_RESUMEN -> COUNT PAR_IZQ DISTINCT . CADENA PUNTO CADENA PAR_DER

    CADENA          shift and go to state 52


state 38

    (1) S -> SELECT_ FROM_ JOIN_ WHERE_ GROUP_BY . ORDER_BY
    (49) ORDER_BY -> . ORDER BY CAMPOS_O
    (50) ORDER_BY -> .

    ORDER           shift and go to state 54
    $end            reduce using rule 50 (ORDER_BY -> .)
    PAR_DER         reduce using rule 50 (ORDER_BY -> .)

    ORDER_BY                       shift and go to state 53

state 39

    (43) GROUP_BY -> GROUP . BY CAMPOS_G HAVING_

    BY              shift and go to state 55


state 40

    (21) WHERE_ -> WHERE COND_W .
    (25) COND_W -> COND_W . AND COND_W
    (26) COND_W -> COND_W . OR COND_W

    GROUP           reduce using rule 21 (WHERE_ -> WHERE COND_W .)
    ORDER           reduce using rule 21 (WHERE_ -> WHERE COND_W .)
    $end            reduce using rule 21 (WHERE_ -> WHERE COND_W .)
    PAR_DER         reduce using rule 21 (WHERE_ -> WHERE COND_W .)
    AND             shift and go to state 56
    OR              shift and go to state 57


state 41

    (23) COND_W -> CONDICION .

    AND             reduce using rule 23 (COND_W -> CONDICION .)
    OR              reduce using rule 23 (COND_W -> CONDICION .)
    GROUP           reduce using rule 23 (COND_W -> CONDICION .)
    ORDER           reduce using rule 23 (COND_W -> CONDICION .)
    $end            reduce using rule 23 (COND_W -> CONDICION .)
    PAR_DER         reduce using rule 23 (COND_W -> CONDICION .)
    INNER           reduce using rule 23 (COND_W -> CONDICION .)
    LEFT            reduce using rule 23 (COND_W -> CONDICION .)
    WHERE           reduce using rule 23 (COND_W -> CONDICION .)


state 42

    (24) COND_W -> CADENA . PUNTO CADENA SUBCONSULTA
    (32) CONDICION -> CADENA . PUNTO CADENA SIGNO VALOR
    (33) CONDICION -> CADENA . PUNTO CADENA SIGNO CADENA PUNTO CADENA
    (34) CONDICION -> CADENA . PUNTO CADENA NULLEABLE

    PUNTO           shift and go to state 58


state 43

    (27) COND_W -> PAR_IZQ . COND_W OR COND_W PAR_DER
    (23) COND_W -> . CONDICION
    (24) COND_W -> . CADENA PUNTO CADENA SUBCONSULTA
    (25) COND_W -> . COND_W AND COND_W
    (26) COND_W -> . COND_W OR COND_W
    (27) COND_W -> . PAR_IZQ COND_W OR COND_W PAR_DER
    (32) CONDICION -> . CADENA PUNTO CADENA SIGNO VALOR
    (33) CONDICION -> . CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA
    (34) CONDICION -> . CADENA PUNTO CADENA NULLEABLE

    CADENA          shift and go to state 42
    PAR_IZQ         shift and go to state 43

    COND_W                         shift and go to state 59
    CONDICION                      shift and go to state 41

state 44

    (19) JOIN_INNER_LEFT -> INNER JOIN CADENA . ALIAS_T ON COND_W
    (15) ALIAS_T -> . AS CADENA
    (16) ALIAS_T -> . CADENA

    AS              shift and go to state 62
    CADENA          shift and go to state 60

    ALIAS_T                        shift and go to state 61

state 45

    (20) JOIN_INNER_LEFT -> LEFT JOIN CADENA . ALIAS_T ON COND_W
    (15) ALIAS_T -> . AS CADENA
    (16) ALIAS_T -> . CADENA

    AS              shift and go to state 62
    CADENA          shift and go to state 60

    ALIAS_T                        shift and go to state 63

state 46

    (13) FROM_ -> FROM CADENA AS CADENA .

    INNER           reduce using rule 13 (FROM_ -> FROM CADENA AS CADENA .)
    LEFT            reduce using rule 13 (FROM_ -> FROM CADENA AS CADENA .)
    WHERE           reduce using rule 13 (FROM_ -> FROM CADENA AS CADENA .)
    GROUP           reduce using rule 13 (FROM_ -> FROM CADENA AS CADENA .)
    ORDER           reduce using rule 13 (FROM_ -> FROM CADENA AS CADENA .)
    $end            reduce using rule 13 (FROM_ -> FROM CADENA AS CADENA .)
    PAR_DER         reduce using rule 13 (FROM_ -> FROM CADENA AS CADENA .)


state 47

    (5) CAMPO -> CADENA PUNTO CADENA AS . COMILLA CADENA COMILLA

    COMILLA         shift and go to state 64


state 48

    (7) CAMPO -> FUNC_RESUMEN AS COMILLA CADENA . COMILLA

    COMILLA         shift and go to state 65


state 49

    (8) FUNC_RESUMEN -> MIN PAR_IZQ CADENA PUNTO . CADENA PAR_DER

    CADENA          shift and go to state 66


state 50

    (9) FUNC_RESUMEN -> MAX PAR_IZQ CADENA PUNTO . CADENA PAR_DER

    CADENA          shift and go to state 67


state 51

    (10) FUNC_RESUMEN -> COUNT PAR_IZQ CADENA PUNTO . CADENA PAR_DER

    CADENA          shift and go to state 68


state 52

    (11) FUNC_RESUMEN -> COUNT PAR_IZQ DISTINCT CADENA . PUNTO CADENA PAR_DER

    PUNTO           shift and go to state 69


state 53

    (1) S -> SELECT_ FROM_ JOIN_ WHERE_ GROUP_BY ORDER_BY .

    $end            reduce using rule 1 (S -> SELECT_ FROM_ JOIN_ WHERE_ GROUP_BY ORDER_BY .)
    PAR_DER         reduce using rule 1 (S -> SELECT_ FROM_ JOIN_ WHERE_ GROUP_BY ORDER_BY .)


state 54

    (49) ORDER_BY -> ORDER . BY CAMPOS_O

    BY              shift and go to state 70


state 55

    (43) GROUP_BY -> GROUP BY . CAMPOS_G HAVING_
    (45) CAMPOS_G -> . CADENA PUNTO CADENA COMA CAMPOS_G
    (46) CAMPOS_G -> . CADENA PUNTO CADENA

    CADENA          shift and go to state 72

    CAMPOS_G                       shift and go to state 71

state 56

    (25) COND_W -> COND_W AND . COND_W
    (23) COND_W -> . CONDICION
    (24) COND_W -> . CADENA PUNTO CADENA SUBCONSULTA
    (25) COND_W -> . COND_W AND COND_W
    (26) COND_W -> . COND_W OR COND_W
    (27) COND_W -> . PAR_IZQ COND_W OR COND_W PAR_DER
    (32) CONDICION -> . CADENA PUNTO CADENA SIGNO VALOR
    (33) CONDICION -> . CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA
    (34) CONDICION -> . CADENA PUNTO CADENA NULLEABLE

    CADENA          shift and go to state 42
    PAR_IZQ         shift and go to state 43

    COND_W                         shift and go to state 73
    CONDICION                      shift and go to state 41

state 57

    (26) COND_W -> COND_W OR . COND_W
    (23) COND_W -> . CONDICION
    (24) COND_W -> . CADENA PUNTO CADENA SUBCONSULTA
    (25) COND_W -> . COND_W AND COND_W
    (26) COND_W -> . COND_W OR COND_W
    (27) COND_W -> . PAR_IZQ COND_W OR COND_W PAR_DER
    (32) CONDICION -> . CADENA PUNTO CADENA SIGNO VALOR
    (33) CONDICION -> . CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA
    (34) CONDICION -> . CADENA PUNTO CADENA NULLEABLE

    CADENA          shift and go to state 42
    PAR_IZQ         shift and go to state 43

    COND_W                         shift and go to state 74
    CONDICION                      shift and go to state 41

state 58

    (24) COND_W -> CADENA PUNTO . CADENA SUBCONSULTA
    (32) CONDICION -> CADENA PUNTO . CADENA SIGNO VALOR
    (33) CONDICION -> CADENA PUNTO . CADENA SIGNO CADENA PUNTO CADENA
    (34) CONDICION -> CADENA PUNTO . CADENA NULLEABLE

    CADENA          shift and go to state 75


state 59

    (27) COND_W -> PAR_IZQ COND_W . OR COND_W PAR_DER
    (25) COND_W -> COND_W . AND COND_W
    (26) COND_W -> COND_W . OR COND_W

    OR              shift and go to state 76
    AND             shift and go to state 56


state 60

    (16) ALIAS_T -> CADENA .

    ON              reduce using rule 16 (ALIAS_T -> CADENA .)


state 61

    (19) JOIN_INNER_LEFT -> INNER JOIN CADENA ALIAS_T . ON COND_W

    ON              shift and go to state 77


state 62

    (15) ALIAS_T -> AS . CADENA

    CADENA          shift and go to state 78


state 63

    (20) JOIN_INNER_LEFT -> LEFT JOIN CADENA ALIAS_T . ON COND_W

    ON              shift and go to state 79


state 64

    (5) CAMPO -> CADENA PUNTO CADENA AS COMILLA . CADENA COMILLA

    CADENA          shift and go to state 80


state 65

    (7) CAMPO -> FUNC_RESUMEN AS COMILLA CADENA COMILLA .

    COMA            reduce using rule 7 (CAMPO -> FUNC_RESUMEN AS COMILLA CADENA COMILLA .)
    FROM            reduce using rule 7 (CAMPO -> FUNC_RESUMEN AS COMILLA CADENA COMILLA .)


state 66

    (8) FUNC_RESUMEN -> MIN PAR_IZQ CADENA PUNTO CADENA . PAR_DER

    PAR_DER         shift and go to state 81


state 67

    (9) FUNC_RESUMEN -> MAX PAR_IZQ CADENA PUNTO CADENA . PAR_DER

    PAR_DER         shift and go to state 82


state 68

    (10) FUNC_RESUMEN -> COUNT PAR_IZQ CADENA PUNTO CADENA . PAR_DER

    PAR_DER         shift and go to state 83


state 69

    (11) FUNC_RESUMEN -> COUNT PAR_IZQ DISTINCT CADENA PUNTO . CADENA PAR_DER

    CADENA          shift and go to state 84


state 70

    (49) ORDER_BY -> ORDER BY . CAMPOS_O
    (51) CAMPOS_O -> . CADENA PUNTO CADENA ORDEN COMA CAMPOS_O
    (52) CAMPOS_O -> . CADENA PUNTO CADENA ORDEN

    CADENA          shift and go to state 86

    CAMPOS_O                       shift and go to state 85

state 71

    (43) GROUP_BY -> GROUP BY CAMPOS_G . HAVING_
    (47) HAVING_ -> . HAVING FUNC_RESUMEN SIGNO VALOR
    (48) HAVING_ -> .

    HAVING          shift and go to state 88
    ORDER           reduce using rule 48 (HAVING_ -> .)
    $end            reduce using rule 48 (HAVING_ -> .)
    PAR_DER         reduce using rule 48 (HAVING_ -> .)

    HAVING_                        shift and go to state 87

state 72

    (45) CAMPOS_G -> CADENA . PUNTO CADENA COMA CAMPOS_G
    (46) CAMPOS_G -> CADENA . PUNTO CADENA

    PUNTO           shift and go to state 89


state 73

    (25) COND_W -> COND_W AND COND_W .
    (25) COND_W -> COND_W . AND COND_W
    (26) COND_W -> COND_W . OR COND_W

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GROUP           reduce using rule 25 (COND_W -> COND_W AND COND_W .)
    ORDER           reduce using rule 25 (COND_W -> COND_W AND COND_W .)
    $end            reduce using rule 25 (COND_W -> COND_W AND COND_W .)
    PAR_DER         reduce using rule 25 (COND_W -> COND_W AND COND_W .)
    INNER           reduce using rule 25 (COND_W -> COND_W AND COND_W .)
    LEFT            reduce using rule 25 (COND_W -> COND_W AND COND_W .)
    WHERE           reduce using rule 25 (COND_W -> COND_W AND COND_W .)
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! AND             [ reduce using rule 25 (COND_W -> COND_W AND COND_W .) ]
  ! OR              [ reduce using rule 25 (COND_W -> COND_W AND COND_W .) ]


state 74

    (26) COND_W -> COND_W OR COND_W .
    (25) COND_W -> COND_W . AND COND_W
    (26) COND_W -> COND_W . OR COND_W

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    GROUP           reduce using rule 26 (COND_W -> COND_W OR COND_W .)
    ORDER           reduce using rule 26 (COND_W -> COND_W OR COND_W .)
    $end            reduce using rule 26 (COND_W -> COND_W OR COND_W .)
    PAR_DER         reduce using rule 26 (COND_W -> COND_W OR COND_W .)
    INNER           reduce using rule 26 (COND_W -> COND_W OR COND_W .)
    LEFT            reduce using rule 26 (COND_W -> COND_W OR COND_W .)
    WHERE           reduce using rule 26 (COND_W -> COND_W OR COND_W .)
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! AND             [ reduce using rule 26 (COND_W -> COND_W OR COND_W .) ]
  ! OR              [ reduce using rule 26 (COND_W -> COND_W OR COND_W .) ]


state 75

    (24) COND_W -> CADENA PUNTO CADENA . SUBCONSULTA
    (32) CONDICION -> CADENA PUNTO CADENA . SIGNO VALOR
    (33) CONDICION -> CADENA PUNTO CADENA . SIGNO CADENA PUNTO CADENA
    (34) CONDICION -> CADENA PUNTO CADENA . NULLEABLE
    (28) SUBCONSULTA -> . IN PAR_IZQ S PAR_DER
    (29) SUBCONSULTA -> . NOT IN PAR_IZQ S PAR_DER
    (37) SIGNO -> . IGUAL
    (38) SIGNO -> . MAYOR
    (39) SIGNO -> . MENOR
    (40) SIGNO -> . MAYOR_IGUAL
    (41) SIGNO -> . MENOR_IGUAL
    (42) SIGNO -> . DESIGUAL
    (35) NULLEABLE -> . IS NOT NULL
    (36) NULLEABLE -> . IS NULL

    IN              shift and go to state 93
    NOT             shift and go to state 94
    IGUAL           shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR_IGUAL     shift and go to state 98
    MENOR_IGUAL     shift and go to state 99
    DESIGUAL        shift and go to state 100
    IS              shift and go to state 101

    SUBCONSULTA                    shift and go to state 90
    SIGNO                          shift and go to state 91
    NULLEABLE                      shift and go to state 92

state 76

    (27) COND_W -> PAR_IZQ COND_W OR . COND_W PAR_DER
    (26) COND_W -> COND_W OR . COND_W
    (23) COND_W -> . CONDICION
    (24) COND_W -> . CADENA PUNTO CADENA SUBCONSULTA
    (25) COND_W -> . COND_W AND COND_W
    (26) COND_W -> . COND_W OR COND_W
    (27) COND_W -> . PAR_IZQ COND_W OR COND_W PAR_DER
    (32) CONDICION -> . CADENA PUNTO CADENA SIGNO VALOR
    (33) CONDICION -> . CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA
    (34) CONDICION -> . CADENA PUNTO CADENA NULLEABLE

    CADENA          shift and go to state 42
    PAR_IZQ         shift and go to state 43

    COND_W                         shift and go to state 102
    CONDICION                      shift and go to state 41

state 77

    (19) JOIN_INNER_LEFT -> INNER JOIN CADENA ALIAS_T ON . COND_W
    (23) COND_W -> . CONDICION
    (24) COND_W -> . CADENA PUNTO CADENA SUBCONSULTA
    (25) COND_W -> . COND_W AND COND_W
    (26) COND_W -> . COND_W OR COND_W
    (27) COND_W -> . PAR_IZQ COND_W OR COND_W PAR_DER
    (32) CONDICION -> . CADENA PUNTO CADENA SIGNO VALOR
    (33) CONDICION -> . CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA
    (34) CONDICION -> . CADENA PUNTO CADENA NULLEABLE

    CADENA          shift and go to state 42
    PAR_IZQ         shift and go to state 43

    COND_W                         shift and go to state 103
    CONDICION                      shift and go to state 41

state 78

    (15) ALIAS_T -> AS CADENA .

    ON              reduce using rule 15 (ALIAS_T -> AS CADENA .)


state 79

    (20) JOIN_INNER_LEFT -> LEFT JOIN CADENA ALIAS_T ON . COND_W
    (23) COND_W -> . CONDICION
    (24) COND_W -> . CADENA PUNTO CADENA SUBCONSULTA
    (25) COND_W -> . COND_W AND COND_W
    (26) COND_W -> . COND_W OR COND_W
    (27) COND_W -> . PAR_IZQ COND_W OR COND_W PAR_DER
    (32) CONDICION -> . CADENA PUNTO CADENA SIGNO VALOR
    (33) CONDICION -> . CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA
    (34) CONDICION -> . CADENA PUNTO CADENA NULLEABLE

    CADENA          shift and go to state 42
    PAR_IZQ         shift and go to state 43

    COND_W                         shift and go to state 104
    CONDICION                      shift and go to state 41

state 80

    (5) CAMPO -> CADENA PUNTO CADENA AS COMILLA CADENA . COMILLA

    COMILLA         shift and go to state 105


state 81

    (8) FUNC_RESUMEN -> MIN PAR_IZQ CADENA PUNTO CADENA PAR_DER .

    AS              reduce using rule 8 (FUNC_RESUMEN -> MIN PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    IGUAL           reduce using rule 8 (FUNC_RESUMEN -> MIN PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    MAYOR           reduce using rule 8 (FUNC_RESUMEN -> MIN PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    MENOR           reduce using rule 8 (FUNC_RESUMEN -> MIN PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    MAYOR_IGUAL     reduce using rule 8 (FUNC_RESUMEN -> MIN PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    MENOR_IGUAL     reduce using rule 8 (FUNC_RESUMEN -> MIN PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    DESIGUAL        reduce using rule 8 (FUNC_RESUMEN -> MIN PAR_IZQ CADENA PUNTO CADENA PAR_DER .)


state 82

    (9) FUNC_RESUMEN -> MAX PAR_IZQ CADENA PUNTO CADENA PAR_DER .

    AS              reduce using rule 9 (FUNC_RESUMEN -> MAX PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    IGUAL           reduce using rule 9 (FUNC_RESUMEN -> MAX PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    MAYOR           reduce using rule 9 (FUNC_RESUMEN -> MAX PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    MENOR           reduce using rule 9 (FUNC_RESUMEN -> MAX PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    MAYOR_IGUAL     reduce using rule 9 (FUNC_RESUMEN -> MAX PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    MENOR_IGUAL     reduce using rule 9 (FUNC_RESUMEN -> MAX PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    DESIGUAL        reduce using rule 9 (FUNC_RESUMEN -> MAX PAR_IZQ CADENA PUNTO CADENA PAR_DER .)


state 83

    (10) FUNC_RESUMEN -> COUNT PAR_IZQ CADENA PUNTO CADENA PAR_DER .

    AS              reduce using rule 10 (FUNC_RESUMEN -> COUNT PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    IGUAL           reduce using rule 10 (FUNC_RESUMEN -> COUNT PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    MAYOR           reduce using rule 10 (FUNC_RESUMEN -> COUNT PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    MENOR           reduce using rule 10 (FUNC_RESUMEN -> COUNT PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    MAYOR_IGUAL     reduce using rule 10 (FUNC_RESUMEN -> COUNT PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    MENOR_IGUAL     reduce using rule 10 (FUNC_RESUMEN -> COUNT PAR_IZQ CADENA PUNTO CADENA PAR_DER .)
    DESIGUAL        reduce using rule 10 (FUNC_RESUMEN -> COUNT PAR_IZQ CADENA PUNTO CADENA PAR_DER .)


state 84

    (11) FUNC_RESUMEN -> COUNT PAR_IZQ DISTINCT CADENA PUNTO CADENA . PAR_DER

    PAR_DER         shift and go to state 106


state 85

    (49) ORDER_BY -> ORDER BY CAMPOS_O .

    $end            reduce using rule 49 (ORDER_BY -> ORDER BY CAMPOS_O .)
    PAR_DER         reduce using rule 49 (ORDER_BY -> ORDER BY CAMPOS_O .)


state 86

    (51) CAMPOS_O -> CADENA . PUNTO CADENA ORDEN COMA CAMPOS_O
    (52) CAMPOS_O -> CADENA . PUNTO CADENA ORDEN

    PUNTO           shift and go to state 107


state 87

    (43) GROUP_BY -> GROUP BY CAMPOS_G HAVING_ .

    ORDER           reduce using rule 43 (GROUP_BY -> GROUP BY CAMPOS_G HAVING_ .)
    $end            reduce using rule 43 (GROUP_BY -> GROUP BY CAMPOS_G HAVING_ .)
    PAR_DER         reduce using rule 43 (GROUP_BY -> GROUP BY CAMPOS_G HAVING_ .)


state 88

    (47) HAVING_ -> HAVING . FUNC_RESUMEN SIGNO VALOR
    (8) FUNC_RESUMEN -> . MIN PAR_IZQ CADENA PUNTO CADENA PAR_DER
    (9) FUNC_RESUMEN -> . MAX PAR_IZQ CADENA PUNTO CADENA PAR_DER
    (10) FUNC_RESUMEN -> . COUNT PAR_IZQ CADENA PUNTO CADENA PAR_DER
    (11) FUNC_RESUMEN -> . COUNT PAR_IZQ DISTINCT CADENA PUNTO CADENA PAR_DER

    MIN             shift and go to state 10
    MAX             shift and go to state 11
    COUNT           shift and go to state 12

    FUNC_RESUMEN                   shift and go to state 108

state 89

    (45) CAMPOS_G -> CADENA PUNTO . CADENA COMA CAMPOS_G
    (46) CAMPOS_G -> CADENA PUNTO . CADENA

    CADENA          shift and go to state 109


state 90

    (24) COND_W -> CADENA PUNTO CADENA SUBCONSULTA .

    AND             reduce using rule 24 (COND_W -> CADENA PUNTO CADENA SUBCONSULTA .)
    OR              reduce using rule 24 (COND_W -> CADENA PUNTO CADENA SUBCONSULTA .)
    GROUP           reduce using rule 24 (COND_W -> CADENA PUNTO CADENA SUBCONSULTA .)
    ORDER           reduce using rule 24 (COND_W -> CADENA PUNTO CADENA SUBCONSULTA .)
    $end            reduce using rule 24 (COND_W -> CADENA PUNTO CADENA SUBCONSULTA .)
    PAR_DER         reduce using rule 24 (COND_W -> CADENA PUNTO CADENA SUBCONSULTA .)
    INNER           reduce using rule 24 (COND_W -> CADENA PUNTO CADENA SUBCONSULTA .)
    LEFT            reduce using rule 24 (COND_W -> CADENA PUNTO CADENA SUBCONSULTA .)
    WHERE           reduce using rule 24 (COND_W -> CADENA PUNTO CADENA SUBCONSULTA .)


state 91

    (32) CONDICION -> CADENA PUNTO CADENA SIGNO . VALOR
    (33) CONDICION -> CADENA PUNTO CADENA SIGNO . CADENA PUNTO CADENA
    (30) VALOR -> . NUMERO
    (31) VALOR -> . COMILLA CADENA COMILLA

    CADENA          shift and go to state 110
    NUMERO          shift and go to state 112
    COMILLA         shift and go to state 113

    VALOR                          shift and go to state 111

state 92

    (34) CONDICION -> CADENA PUNTO CADENA NULLEABLE .

    AND             reduce using rule 34 (CONDICION -> CADENA PUNTO CADENA NULLEABLE .)
    OR              reduce using rule 34 (CONDICION -> CADENA PUNTO CADENA NULLEABLE .)
    GROUP           reduce using rule 34 (CONDICION -> CADENA PUNTO CADENA NULLEABLE .)
    ORDER           reduce using rule 34 (CONDICION -> CADENA PUNTO CADENA NULLEABLE .)
    $end            reduce using rule 34 (CONDICION -> CADENA PUNTO CADENA NULLEABLE .)
    PAR_DER         reduce using rule 34 (CONDICION -> CADENA PUNTO CADENA NULLEABLE .)
    INNER           reduce using rule 34 (CONDICION -> CADENA PUNTO CADENA NULLEABLE .)
    LEFT            reduce using rule 34 (CONDICION -> CADENA PUNTO CADENA NULLEABLE .)
    WHERE           reduce using rule 34 (CONDICION -> CADENA PUNTO CADENA NULLEABLE .)


state 93

    (28) SUBCONSULTA -> IN . PAR_IZQ S PAR_DER

    PAR_IZQ         shift and go to state 114


state 94

    (29) SUBCONSULTA -> NOT . IN PAR_IZQ S PAR_DER

    IN              shift and go to state 115


state 95

    (37) SIGNO -> IGUAL .

    CADENA          reduce using rule 37 (SIGNO -> IGUAL .)
    NUMERO          reduce using rule 37 (SIGNO -> IGUAL .)
    COMILLA         reduce using rule 37 (SIGNO -> IGUAL .)


state 96

    (38) SIGNO -> MAYOR .

    CADENA          reduce using rule 38 (SIGNO -> MAYOR .)
    NUMERO          reduce using rule 38 (SIGNO -> MAYOR .)
    COMILLA         reduce using rule 38 (SIGNO -> MAYOR .)


state 97

    (39) SIGNO -> MENOR .

    CADENA          reduce using rule 39 (SIGNO -> MENOR .)
    NUMERO          reduce using rule 39 (SIGNO -> MENOR .)
    COMILLA         reduce using rule 39 (SIGNO -> MENOR .)


state 98

    (40) SIGNO -> MAYOR_IGUAL .

    CADENA          reduce using rule 40 (SIGNO -> MAYOR_IGUAL .)
    NUMERO          reduce using rule 40 (SIGNO -> MAYOR_IGUAL .)
    COMILLA         reduce using rule 40 (SIGNO -> MAYOR_IGUAL .)


state 99

    (41) SIGNO -> MENOR_IGUAL .

    CADENA          reduce using rule 41 (SIGNO -> MENOR_IGUAL .)
    NUMERO          reduce using rule 41 (SIGNO -> MENOR_IGUAL .)
    COMILLA         reduce using rule 41 (SIGNO -> MENOR_IGUAL .)


state 100

    (42) SIGNO -> DESIGUAL .

    CADENA          reduce using rule 42 (SIGNO -> DESIGUAL .)
    NUMERO          reduce using rule 42 (SIGNO -> DESIGUAL .)
    COMILLA         reduce using rule 42 (SIGNO -> DESIGUAL .)


state 101

    (35) NULLEABLE -> IS . NOT NULL
    (36) NULLEABLE -> IS . NULL

    NOT             shift and go to state 116
    NULL            shift and go to state 117


state 102

    (27) COND_W -> PAR_IZQ COND_W OR COND_W . PAR_DER
    (26) COND_W -> COND_W OR COND_W .
    (25) COND_W -> COND_W . AND COND_W
    (26) COND_W -> COND_W . OR COND_W

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PAR_DER         shift and go to state 118
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! OR              [ reduce using rule 26 (COND_W -> COND_W OR COND_W .) ]
  ! AND             [ reduce using rule 26 (COND_W -> COND_W OR COND_W .) ]


state 103

    (19) JOIN_INNER_LEFT -> INNER JOIN CADENA ALIAS_T ON COND_W .
    (25) COND_W -> COND_W . AND COND_W
    (26) COND_W -> COND_W . OR COND_W

    INNER           reduce using rule 19 (JOIN_INNER_LEFT -> INNER JOIN CADENA ALIAS_T ON COND_W .)
    LEFT            reduce using rule 19 (JOIN_INNER_LEFT -> INNER JOIN CADENA ALIAS_T ON COND_W .)
    WHERE           reduce using rule 19 (JOIN_INNER_LEFT -> INNER JOIN CADENA ALIAS_T ON COND_W .)
    GROUP           reduce using rule 19 (JOIN_INNER_LEFT -> INNER JOIN CADENA ALIAS_T ON COND_W .)
    ORDER           reduce using rule 19 (JOIN_INNER_LEFT -> INNER JOIN CADENA ALIAS_T ON COND_W .)
    $end            reduce using rule 19 (JOIN_INNER_LEFT -> INNER JOIN CADENA ALIAS_T ON COND_W .)
    PAR_DER         reduce using rule 19 (JOIN_INNER_LEFT -> INNER JOIN CADENA ALIAS_T ON COND_W .)
    AND             shift and go to state 56
    OR              shift and go to state 57


state 104

    (20) JOIN_INNER_LEFT -> LEFT JOIN CADENA ALIAS_T ON COND_W .
    (25) COND_W -> COND_W . AND COND_W
    (26) COND_W -> COND_W . OR COND_W

    INNER           reduce using rule 20 (JOIN_INNER_LEFT -> LEFT JOIN CADENA ALIAS_T ON COND_W .)
    LEFT            reduce using rule 20 (JOIN_INNER_LEFT -> LEFT JOIN CADENA ALIAS_T ON COND_W .)
    WHERE           reduce using rule 20 (JOIN_INNER_LEFT -> LEFT JOIN CADENA ALIAS_T ON COND_W .)
    GROUP           reduce using rule 20 (JOIN_INNER_LEFT -> LEFT JOIN CADENA ALIAS_T ON COND_W .)
    ORDER           reduce using rule 20 (JOIN_INNER_LEFT -> LEFT JOIN CADENA ALIAS_T ON COND_W .)
    $end            reduce using rule 20 (JOIN_INNER_LEFT -> LEFT JOIN CADENA ALIAS_T ON COND_W .)
    PAR_DER         reduce using rule 20 (JOIN_INNER_LEFT -> LEFT JOIN CADENA ALIAS_T ON COND_W .)
    AND             shift and go to state 56
    OR              shift and go to state 57


state 105

    (5) CAMPO -> CADENA PUNTO CADENA AS COMILLA CADENA COMILLA .

    COMA            reduce using rule 5 (CAMPO -> CADENA PUNTO CADENA AS COMILLA CADENA COMILLA .)
    FROM            reduce using rule 5 (CAMPO -> CADENA PUNTO CADENA AS COMILLA CADENA COMILLA .)


state 106

    (11) FUNC_RESUMEN -> COUNT PAR_IZQ DISTINCT CADENA PUNTO CADENA PAR_DER .

    AS              reduce using rule 11 (FUNC_RESUMEN -> COUNT PAR_IZQ DISTINCT CADENA PUNTO CADENA PAR_DER .)
    IGUAL           reduce using rule 11 (FUNC_RESUMEN -> COUNT PAR_IZQ DISTINCT CADENA PUNTO CADENA PAR_DER .)
    MAYOR           reduce using rule 11 (FUNC_RESUMEN -> COUNT PAR_IZQ DISTINCT CADENA PUNTO CADENA PAR_DER .)
    MENOR           reduce using rule 11 (FUNC_RESUMEN -> COUNT PAR_IZQ DISTINCT CADENA PUNTO CADENA PAR_DER .)
    MAYOR_IGUAL     reduce using rule 11 (FUNC_RESUMEN -> COUNT PAR_IZQ DISTINCT CADENA PUNTO CADENA PAR_DER .)
    MENOR_IGUAL     reduce using rule 11 (FUNC_RESUMEN -> COUNT PAR_IZQ DISTINCT CADENA PUNTO CADENA PAR_DER .)
    DESIGUAL        reduce using rule 11 (FUNC_RESUMEN -> COUNT PAR_IZQ DISTINCT CADENA PUNTO CADENA PAR_DER .)


state 107

    (51) CAMPOS_O -> CADENA PUNTO . CADENA ORDEN COMA CAMPOS_O
    (52) CAMPOS_O -> CADENA PUNTO . CADENA ORDEN

    CADENA          shift and go to state 119


state 108

    (47) HAVING_ -> HAVING FUNC_RESUMEN . SIGNO VALOR
    (37) SIGNO -> . IGUAL
    (38) SIGNO -> . MAYOR
    (39) SIGNO -> . MENOR
    (40) SIGNO -> . MAYOR_IGUAL
    (41) SIGNO -> . MENOR_IGUAL
    (42) SIGNO -> . DESIGUAL

    IGUAL           shift and go to state 95
    MAYOR           shift and go to state 96
    MENOR           shift and go to state 97
    MAYOR_IGUAL     shift and go to state 98
    MENOR_IGUAL     shift and go to state 99
    DESIGUAL        shift and go to state 100

    SIGNO                          shift and go to state 120

state 109

    (45) CAMPOS_G -> CADENA PUNTO CADENA . COMA CAMPOS_G
    (46) CAMPOS_G -> CADENA PUNTO CADENA .

    COMA            shift and go to state 121
    HAVING          reduce using rule 46 (CAMPOS_G -> CADENA PUNTO CADENA .)
    ORDER           reduce using rule 46 (CAMPOS_G -> CADENA PUNTO CADENA .)
    $end            reduce using rule 46 (CAMPOS_G -> CADENA PUNTO CADENA .)
    PAR_DER         reduce using rule 46 (CAMPOS_G -> CADENA PUNTO CADENA .)


state 110

    (33) CONDICION -> CADENA PUNTO CADENA SIGNO CADENA . PUNTO CADENA

    PUNTO           shift and go to state 122


state 111

    (32) CONDICION -> CADENA PUNTO CADENA SIGNO VALOR .

    AND             reduce using rule 32 (CONDICION -> CADENA PUNTO CADENA SIGNO VALOR .)
    OR              reduce using rule 32 (CONDICION -> CADENA PUNTO CADENA SIGNO VALOR .)
    GROUP           reduce using rule 32 (CONDICION -> CADENA PUNTO CADENA SIGNO VALOR .)
    ORDER           reduce using rule 32 (CONDICION -> CADENA PUNTO CADENA SIGNO VALOR .)
    $end            reduce using rule 32 (CONDICION -> CADENA PUNTO CADENA SIGNO VALOR .)
    PAR_DER         reduce using rule 32 (CONDICION -> CADENA PUNTO CADENA SIGNO VALOR .)
    INNER           reduce using rule 32 (CONDICION -> CADENA PUNTO CADENA SIGNO VALOR .)
    LEFT            reduce using rule 32 (CONDICION -> CADENA PUNTO CADENA SIGNO VALOR .)
    WHERE           reduce using rule 32 (CONDICION -> CADENA PUNTO CADENA SIGNO VALOR .)


state 112

    (30) VALOR -> NUMERO .

    AND             reduce using rule 30 (VALOR -> NUMERO .)
    OR              reduce using rule 30 (VALOR -> NUMERO .)
    GROUP           reduce using rule 30 (VALOR -> NUMERO .)
    ORDER           reduce using rule 30 (VALOR -> NUMERO .)
    $end            reduce using rule 30 (VALOR -> NUMERO .)
    PAR_DER         reduce using rule 30 (VALOR -> NUMERO .)
    INNER           reduce using rule 30 (VALOR -> NUMERO .)
    LEFT            reduce using rule 30 (VALOR -> NUMERO .)
    WHERE           reduce using rule 30 (VALOR -> NUMERO .)


state 113

    (31) VALOR -> COMILLA . CADENA COMILLA

    CADENA          shift and go to state 123


state 114

    (28) SUBCONSULTA -> IN PAR_IZQ . S PAR_DER
    (1) S -> . SELECT_ FROM_ JOIN_ WHERE_ GROUP_BY ORDER_BY
    (2) SELECT_ -> . SELECT CAMPOS

    SELECT          shift and go to state 3

    S                              shift and go to state 124
    SELECT_                        shift and go to state 2

state 115

    (29) SUBCONSULTA -> NOT IN . PAR_IZQ S PAR_DER

    PAR_IZQ         shift and go to state 125


state 116

    (35) NULLEABLE -> IS NOT . NULL

    NULL            shift and go to state 126


state 117

    (36) NULLEABLE -> IS NULL .

    AND             reduce using rule 36 (NULLEABLE -> IS NULL .)
    OR              reduce using rule 36 (NULLEABLE -> IS NULL .)
    GROUP           reduce using rule 36 (NULLEABLE -> IS NULL .)
    ORDER           reduce using rule 36 (NULLEABLE -> IS NULL .)
    $end            reduce using rule 36 (NULLEABLE -> IS NULL .)
    PAR_DER         reduce using rule 36 (NULLEABLE -> IS NULL .)
    INNER           reduce using rule 36 (NULLEABLE -> IS NULL .)
    LEFT            reduce using rule 36 (NULLEABLE -> IS NULL .)
    WHERE           reduce using rule 36 (NULLEABLE -> IS NULL .)


state 118

    (27) COND_W -> PAR_IZQ COND_W OR COND_W PAR_DER .

    AND             reduce using rule 27 (COND_W -> PAR_IZQ COND_W OR COND_W PAR_DER .)
    OR              reduce using rule 27 (COND_W -> PAR_IZQ COND_W OR COND_W PAR_DER .)
    GROUP           reduce using rule 27 (COND_W -> PAR_IZQ COND_W OR COND_W PAR_DER .)
    ORDER           reduce using rule 27 (COND_W -> PAR_IZQ COND_W OR COND_W PAR_DER .)
    $end            reduce using rule 27 (COND_W -> PAR_IZQ COND_W OR COND_W PAR_DER .)
    PAR_DER         reduce using rule 27 (COND_W -> PAR_IZQ COND_W OR COND_W PAR_DER .)
    INNER           reduce using rule 27 (COND_W -> PAR_IZQ COND_W OR COND_W PAR_DER .)
    LEFT            reduce using rule 27 (COND_W -> PAR_IZQ COND_W OR COND_W PAR_DER .)
    WHERE           reduce using rule 27 (COND_W -> PAR_IZQ COND_W OR COND_W PAR_DER .)


state 119

    (51) CAMPOS_O -> CADENA PUNTO CADENA . ORDEN COMA CAMPOS_O
    (52) CAMPOS_O -> CADENA PUNTO CADENA . ORDEN
    (53) ORDEN -> . ASC
    (54) ORDEN -> . DESC
    (55) ORDEN -> .

    ASC             shift and go to state 128
    DESC            shift and go to state 129
    COMA            reduce using rule 55 (ORDEN -> .)
    $end            reduce using rule 55 (ORDEN -> .)
    PAR_DER         reduce using rule 55 (ORDEN -> .)

    ORDEN                          shift and go to state 127

state 120

    (47) HAVING_ -> HAVING FUNC_RESUMEN SIGNO . VALOR
    (30) VALOR -> . NUMERO
    (31) VALOR -> . COMILLA CADENA COMILLA

    NUMERO          shift and go to state 112
    COMILLA         shift and go to state 113

    VALOR                          shift and go to state 130

state 121

    (45) CAMPOS_G -> CADENA PUNTO CADENA COMA . CAMPOS_G
    (45) CAMPOS_G -> . CADENA PUNTO CADENA COMA CAMPOS_G
    (46) CAMPOS_G -> . CADENA PUNTO CADENA

    CADENA          shift and go to state 72

    CAMPOS_G                       shift and go to state 131

state 122

    (33) CONDICION -> CADENA PUNTO CADENA SIGNO CADENA PUNTO . CADENA

    CADENA          shift and go to state 132


state 123

    (31) VALOR -> COMILLA CADENA . COMILLA

    COMILLA         shift and go to state 133


state 124

    (28) SUBCONSULTA -> IN PAR_IZQ S . PAR_DER

    PAR_DER         shift and go to state 134


state 125

    (29) SUBCONSULTA -> NOT IN PAR_IZQ . S PAR_DER
    (1) S -> . SELECT_ FROM_ JOIN_ WHERE_ GROUP_BY ORDER_BY
    (2) SELECT_ -> . SELECT CAMPOS

    SELECT          shift and go to state 3

    S                              shift and go to state 135
    SELECT_                        shift and go to state 2

state 126

    (35) NULLEABLE -> IS NOT NULL .

    AND             reduce using rule 35 (NULLEABLE -> IS NOT NULL .)
    OR              reduce using rule 35 (NULLEABLE -> IS NOT NULL .)
    GROUP           reduce using rule 35 (NULLEABLE -> IS NOT NULL .)
    ORDER           reduce using rule 35 (NULLEABLE -> IS NOT NULL .)
    $end            reduce using rule 35 (NULLEABLE -> IS NOT NULL .)
    PAR_DER         reduce using rule 35 (NULLEABLE -> IS NOT NULL .)
    INNER           reduce using rule 35 (NULLEABLE -> IS NOT NULL .)
    LEFT            reduce using rule 35 (NULLEABLE -> IS NOT NULL .)
    WHERE           reduce using rule 35 (NULLEABLE -> IS NOT NULL .)


state 127

    (51) CAMPOS_O -> CADENA PUNTO CADENA ORDEN . COMA CAMPOS_O
    (52) CAMPOS_O -> CADENA PUNTO CADENA ORDEN .

    COMA            shift and go to state 136
    $end            reduce using rule 52 (CAMPOS_O -> CADENA PUNTO CADENA ORDEN .)
    PAR_DER         reduce using rule 52 (CAMPOS_O -> CADENA PUNTO CADENA ORDEN .)


state 128

    (53) ORDEN -> ASC .

    COMA            reduce using rule 53 (ORDEN -> ASC .)
    $end            reduce using rule 53 (ORDEN -> ASC .)
    PAR_DER         reduce using rule 53 (ORDEN -> ASC .)


state 129

    (54) ORDEN -> DESC .

    COMA            reduce using rule 54 (ORDEN -> DESC .)
    $end            reduce using rule 54 (ORDEN -> DESC .)
    PAR_DER         reduce using rule 54 (ORDEN -> DESC .)


state 130

    (47) HAVING_ -> HAVING FUNC_RESUMEN SIGNO VALOR .

    ORDER           reduce using rule 47 (HAVING_ -> HAVING FUNC_RESUMEN SIGNO VALOR .)
    $end            reduce using rule 47 (HAVING_ -> HAVING FUNC_RESUMEN SIGNO VALOR .)
    PAR_DER         reduce using rule 47 (HAVING_ -> HAVING FUNC_RESUMEN SIGNO VALOR .)


state 131

    (45) CAMPOS_G -> CADENA PUNTO CADENA COMA CAMPOS_G .

    HAVING          reduce using rule 45 (CAMPOS_G -> CADENA PUNTO CADENA COMA CAMPOS_G .)
    ORDER           reduce using rule 45 (CAMPOS_G -> CADENA PUNTO CADENA COMA CAMPOS_G .)
    $end            reduce using rule 45 (CAMPOS_G -> CADENA PUNTO CADENA COMA CAMPOS_G .)
    PAR_DER         reduce using rule 45 (CAMPOS_G -> CADENA PUNTO CADENA COMA CAMPOS_G .)


state 132

    (33) CONDICION -> CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA .

    AND             reduce using rule 33 (CONDICION -> CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA .)
    OR              reduce using rule 33 (CONDICION -> CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA .)
    GROUP           reduce using rule 33 (CONDICION -> CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA .)
    ORDER           reduce using rule 33 (CONDICION -> CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA .)
    $end            reduce using rule 33 (CONDICION -> CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA .)
    PAR_DER         reduce using rule 33 (CONDICION -> CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA .)
    INNER           reduce using rule 33 (CONDICION -> CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA .)
    LEFT            reduce using rule 33 (CONDICION -> CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA .)
    WHERE           reduce using rule 33 (CONDICION -> CADENA PUNTO CADENA SIGNO CADENA PUNTO CADENA .)


state 133

    (31) VALOR -> COMILLA CADENA COMILLA .

    AND             reduce using rule 31 (VALOR -> COMILLA CADENA COMILLA .)
    OR              reduce using rule 31 (VALOR -> COMILLA CADENA COMILLA .)
    GROUP           reduce using rule 31 (VALOR -> COMILLA CADENA COMILLA .)
    ORDER           reduce using rule 31 (VALOR -> COMILLA CADENA COMILLA .)
    $end            reduce using rule 31 (VALOR -> COMILLA CADENA COMILLA .)
    PAR_DER         reduce using rule 31 (VALOR -> COMILLA CADENA COMILLA .)
    INNER           reduce using rule 31 (VALOR -> COMILLA CADENA COMILLA .)
    LEFT            reduce using rule 31 (VALOR -> COMILLA CADENA COMILLA .)
    WHERE           reduce using rule 31 (VALOR -> COMILLA CADENA COMILLA .)


state 134

    (28) SUBCONSULTA -> IN PAR_IZQ S PAR_DER .

    AND             reduce using rule 28 (SUBCONSULTA -> IN PAR_IZQ S PAR_DER .)
    OR              reduce using rule 28 (SUBCONSULTA -> IN PAR_IZQ S PAR_DER .)
    GROUP           reduce using rule 28 (SUBCONSULTA -> IN PAR_IZQ S PAR_DER .)
    ORDER           reduce using rule 28 (SUBCONSULTA -> IN PAR_IZQ S PAR_DER .)
    $end            reduce using rule 28 (SUBCONSULTA -> IN PAR_IZQ S PAR_DER .)
    PAR_DER         reduce using rule 28 (SUBCONSULTA -> IN PAR_IZQ S PAR_DER .)
    INNER           reduce using rule 28 (SUBCONSULTA -> IN PAR_IZQ S PAR_DER .)
    LEFT            reduce using rule 28 (SUBCONSULTA -> IN PAR_IZQ S PAR_DER .)
    WHERE           reduce using rule 28 (SUBCONSULTA -> IN PAR_IZQ S PAR_DER .)


state 135

    (29) SUBCONSULTA -> NOT IN PAR_IZQ S . PAR_DER

    PAR_DER         shift and go to state 137


state 136

    (51) CAMPOS_O -> CADENA PUNTO CADENA ORDEN COMA . CAMPOS_O
    (51) CAMPOS_O -> . CADENA PUNTO CADENA ORDEN COMA CAMPOS_O
    (52) CAMPOS_O -> . CADENA PUNTO CADENA ORDEN

    CADENA          shift and go to state 86

    CAMPOS_O                       shift and go to state 138

state 137

    (29) SUBCONSULTA -> NOT IN PAR_IZQ S PAR_DER .

    AND             reduce using rule 29 (SUBCONSULTA -> NOT IN PAR_IZQ S PAR_DER .)
    OR              reduce using rule 29 (SUBCONSULTA -> NOT IN PAR_IZQ S PAR_DER .)
    GROUP           reduce using rule 29 (SUBCONSULTA -> NOT IN PAR_IZQ S PAR_DER .)
    ORDER           reduce using rule 29 (SUBCONSULTA -> NOT IN PAR_IZQ S PAR_DER .)
    $end            reduce using rule 29 (SUBCONSULTA -> NOT IN PAR_IZQ S PAR_DER .)
    PAR_DER         reduce using rule 29 (SUBCONSULTA -> NOT IN PAR_IZQ S PAR_DER .)
    INNER           reduce using rule 29 (SUBCONSULTA -> NOT IN PAR_IZQ S PAR_DER .)
    LEFT            reduce using rule 29 (SUBCONSULTA -> NOT IN PAR_IZQ S PAR_DER .)
    WHERE           reduce using rule 29 (SUBCONSULTA -> NOT IN PAR_IZQ S PAR_DER .)


state 138

    (51) CAMPOS_O -> CADENA PUNTO CADENA ORDEN COMA CAMPOS_O .

    $end            reduce using rule 51 (CAMPOS_O -> CADENA PUNTO CADENA ORDEN COMA CAMPOS_O .)
    PAR_DER         reduce using rule 51 (CAMPOS_O -> CADENA PUNTO CADENA ORDEN COMA CAMPOS_O .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 102 resolved as shift
WARNING: shift/reduce conflict for OR in state 102 resolved as shift
